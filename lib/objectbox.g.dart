// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'model/card.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 6807928989360611827),
      name: 'ReviewCard',
      lastPropertyId: const obx_int.IdUid(11, 6383597662225847780),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6238667262156652564),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5503218738714244838),
            name: 'interval',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1258195153061170055),
            name: 'readings_on',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2052350487417981821),
            name: 'readings_kun',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4807151307924405521),
            name: 'meanings',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 6207429847828818923),
            name: 'repetition',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 330606526834573420),
            name: 'easeFactor',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 4632284059512845819),
            name: 'lastReviewed',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1447031631430139620),
            name: 'nextReviewDate',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 134917616500284543),
            name: 'kanji',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 6383597662225847780),
            name: 'previousInterval',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 6807928989360611827),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ReviewCard: obx_int.EntityDefinition<ReviewCard>(
        model: _entities[0],
        toOneRelations: (ReviewCard object) => [],
        toManyRelations: (ReviewCard object) => {},
        getId: (ReviewCard object) => object.id,
        setId: (ReviewCard object, int id) {
          object.id = id;
        },
        objectToFB: (ReviewCard object, fb.Builder fbb) {
          final readings_onOffset = fbb.writeString(object.readings_on);
          final readings_kunOffset = fbb.writeString(object.readings_kun);
          final meaningsOffset = fbb.writeString(object.meanings);
          final kanjiOffset = fbb.writeString(object.kanji);
          fbb.startTable(12);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addInt64(1, object.interval);
          fbb.addOffset(2, readings_onOffset);
          fbb.addOffset(3, readings_kunOffset);
          fbb.addOffset(4, meaningsOffset);
          fbb.addInt64(5, object.repetition);
          fbb.addFloat64(6, object.easeFactor);
          fbb.addInt64(7, object.lastReviewed?.millisecondsSinceEpoch);
          fbb.addInt64(8, object.nextReviewDate?.millisecondsSinceEpoch);
          fbb.addOffset(9, kanjiOffset);
          fbb.addInt64(10, object.previousInterval);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final lastReviewedValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final nextReviewDateValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 20);
          final kanjiParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 22, '');
          final readings_onParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final readings_kunParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 10, '');
          final meaningsParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final object = ReviewCard(
              kanji: kanjiParam,
              readings_on: readings_onParam,
              readings_kun: readings_kunParam,
              meanings: meaningsParam)
            ..id =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4)
            ..interval =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0)
            ..repetition =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0)
            ..easeFactor =
                const fb.Float64Reader().vTableGet(buffer, rootOffset, 16, 0)
            ..lastReviewed = lastReviewedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(lastReviewedValue)
            ..nextReviewDate = nextReviewDateValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(nextReviewDateValue)
            ..previousInterval =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ReviewCard] entity fields to define ObjectBox queries.
class ReviewCard_ {
  /// see [ReviewCard.id]
  static final id =
      obx.QueryIntegerProperty<ReviewCard>(_entities[0].properties[0]);

  /// see [ReviewCard.interval]
  static final interval =
      obx.QueryIntegerProperty<ReviewCard>(_entities[0].properties[1]);

  /// see [ReviewCard.readings_on]
  static final readings_on =
      obx.QueryStringProperty<ReviewCard>(_entities[0].properties[2]);

  /// see [ReviewCard.readings_kun]
  static final readings_kun =
      obx.QueryStringProperty<ReviewCard>(_entities[0].properties[3]);

  /// see [ReviewCard.meanings]
  static final meanings =
      obx.QueryStringProperty<ReviewCard>(_entities[0].properties[4]);

  /// see [ReviewCard.repetition]
  static final repetition =
      obx.QueryIntegerProperty<ReviewCard>(_entities[0].properties[5]);

  /// see [ReviewCard.easeFactor]
  static final easeFactor =
      obx.QueryDoubleProperty<ReviewCard>(_entities[0].properties[6]);

  /// see [ReviewCard.lastReviewed]
  static final lastReviewed =
      obx.QueryDateProperty<ReviewCard>(_entities[0].properties[7]);

  /// see [ReviewCard.nextReviewDate]
  static final nextReviewDate =
      obx.QueryDateProperty<ReviewCard>(_entities[0].properties[8]);

  /// see [ReviewCard.kanji]
  static final kanji =
      obx.QueryStringProperty<ReviewCard>(_entities[0].properties[9]);

  /// see [ReviewCard.previousInterval]
  static final previousInterval =
      obx.QueryIntegerProperty<ReviewCard>(_entities[0].properties[10]);
}
